{"version":3,"sources":["webpack:///src/app/crud.service.ts"],"names":["CrudService","platform","sqlite","router","db_name","db_table","db_users","db_emplacement","db_inventaire","databaseConn","ready","then","create","name","location","sqLite","dbInstance","executeSql","res","error","alert","JSON","stringify","n","e","c","length","getAllProducts","err","Prodcuts","rows","i","push","item","id","product_id","material","description","cagette","data","product","getAllInvent","Inventaire","inventaire_id","titre","date","type","invent","p","u","pa","te","r","getAllUsers","Users","user_id","nom","prenom","username","email","password","telephone","role","tele","user","navigate","providedIn"],"mappings":"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","file":"default~create-create-module~create-inv-create-inv-module~edit-edit-module~footer-footer-module~inve~2c40b57e-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { Platform } from '@ionic/angular';\r\nimport { SQLite, SQLiteObject } from '@ionic-native/sqlite/ngx';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class CrudService {\r\n  \r\n  private dbInstance: SQLiteObject;\r\n  readonly db_name: string = \"remotestack.db\";\r\n  readonly db_table: string = \"Product\";\r\n  readonly db_users: string = \"users\";\r\n   readonly db_emplacement: string = \"emplacement\";\r\n  readonly db_inventaire: string = \"Inventaire\";\r\n  Prodcuts: Array <any> ;\r\n  Inventaire :Array <any>;\r\n  Users : Array <any>;\r\n\r\n  constructor(\r\n    private platform: Platform,\r\n    private sqlite: SQLite   ,\r\n    private router: Router \r\n  ) { \r\n    this.databaseConn();\r\n  }\r\n\r\n    // Create SQLite database \r\n    databaseConn() {\r\n        this.platform.ready().then(() => {\r\n          this.sqlite.create({\r\n              name: this.db_name,\r\n              location: 'default'\r\n            }).then((sqLite: SQLiteObject) => {\r\n              this.dbInstance = sqLite;\r\n              sqLite.executeSql(`\r\n              CREATE TABLE IF NOT EXISTS ${this.db_table} (\r\n                product_id INTEGER PRIMARY KEY, \r\n                material varchar(255),\r\n                description varchar(255),\r\n                cagette varchar(255)\r\n\r\n              )` ,    []) ,  \r\n               sqLite.executeSql(`\r\n              CREATE TABLE IF NOT EXISTS ${this.db_inventaire} (\r\n                inventaire_id INTEGER PRIMARY KEY, \r\n                titre varchar(255),\r\n                date Date ,\r\n                type varchar(255)\r\n\r\n              )` ,    []),\r\n               sqLite.executeSql(`\r\n              CREATE TABLE IF NOT EXISTS ${this.db_users} (\r\n                user_id INTEGER PRIMARY KEY, \r\n                nom varchar(255),\r\n                prenom varchar(255),\r\n                username varchar(255),\r\n                email varchar(255),\r\n                password varchar(255),\r\n                telephone INTEGER, \r\n                role INTEGER\r\n\r\n              )`, []),\r\n               sqLite.executeSql(`\r\n              CREATE TABLE IF NOT EXISTS ${this.db_emplacement} (\r\n                emplacement_id INTEGER PRIMARY KEY, \r\n                reference varchar(255),\r\n                rayon varchar(255),\r\n                qrcode varchar(255)\r\n\r\n              )`, [])\r\n                .then((res) => {\r\n                   //alert(JSON.stringify(res));\r\n                })\r\n                .catch((error) => alert(JSON.stringify(error)));\r\n            })\r\n            .catch((error) => alert(JSON.stringify(error)));\r\n        });   \r\n    }\r\n\r\n    // Crud\r\n    public addProduct(n, e ,c) {\r\n      // validation\r\n      if (!n.length || !e.length  || !c.length ) { \r\n        alert('Provide both email & name');\r\n        return; \r\n      }\r\n      this.dbInstance.executeSql(`\r\n      INSERT INTO ${this.db_table} (material, description , cagette) VALUES ('${n}', '${e}' , '${c}')`, [])\r\n        .then(() => {\r\n          alert(\"Success\");\r\n          this.getAllProducts();\r\n        }, (e) => {\r\n          alert(JSON.stringify(e.err));\r\n        });\r\n    }\r\n\r\n      public addCagette(c) {\r\n     \r\n      this.dbInstance.executeSql(`\r\n      INSERT INTO ${this.db_table}(cagette) VALUES ('${c}')`, [])\r\n        .then(() => {\r\n          alert(\"Success\");\r\n          this.getAllProducts();\r\n        }, (e) => {\r\n          alert(JSON.stringify(e.err));\r\n        });\r\n    }\r\n\r\n    getAllProducts() {\r\n      return this.dbInstance.executeSql(`SELECT * FROM ${this.db_table}`, []).then((res) => {\r\n        this.Prodcuts = [];\r\n        if (res.rows.length > 0) {\r\n          for (var i = 0; i < res.rows.length; i++) {\r\n            this.Prodcuts.push(res.rows.item(i));\r\n          }\r\n          return this.Prodcuts;\r\n        }\r\n      },(e) => {\r\n        alert(JSON.stringify(e));\r\n      });\r\n    }\r\n\r\n    // Get user\r\n    getProduct(id): Promise<any> {\r\n      return this.dbInstance.executeSql(`SELECT * FROM ${this.db_table} WHERE product_id = ?`, [id])\r\n      .then((res) => { \r\n        return {\r\n          product_id: res.rows.item(0).product_id,\r\n          material: res.rows.item(0).material,  \r\n          description : res.rows.item(0).description,\r\n          cagette : res.rows.item(0).cagette,\r\n        }\r\n      });\r\n    }\r\n\r\n    // Update\r\n    updateProduct(id, material, description , cagette) {\r\n      let data = [material, description , cagette];\r\n      return this.dbInstance.executeSql(`UPDATE ${this.db_table} SET material = ?, description = ? , cagette = ? WHERE product_id = ${id}`, data)\r\n    }  \r\n\r\n    // Delete\r\n    deleteProduct(product) {\r\n      this.dbInstance.executeSql(`\r\n      DELETE FROM ${this.db_table} WHERE product_id = ${product}`, [])\r\n        .then(() => {\r\n          alert(\"produit deleted!\");\r\n          this.getAllProducts();\r\n        })\r\n        .catch(e => {\r\n          alert(JSON.stringify(e))\r\n        });\r\n    }\r\n    \r\n\r\n    public addInventai(n, e ,c) {\r\n    \r\n      this.dbInstance.executeSql(`\r\n      INSERT INTO ${this.db_inventaire} (titre, date , type) VALUES ('${n}', '${e}' , '${c}')`, [])\r\n        .then(() => {\r\n          alert(\"Success\");\r\n          this.getAllInvent();\r\n        }, (e) => {\r\n          alert(JSON.stringify(e.err));\r\n        });\r\n    }\r\n\r\n    getAllInvent() {\r\n      return this.dbInstance.executeSql(`SELECT * FROM ${this.db_inventaire}`, []).then((res) => {\r\n        this.Inventaire = [];\r\n        if (res.rows.length > 0) {\r\n          for (var i = 0; i < res.rows.length; i++) {\r\n            this.Inventaire.push(res.rows.item(i));\r\n          }\r\n          return this.Inventaire;\r\n        }\r\n      },(e) => {\r\n        alert(JSON.stringify(e));\r\n      });\r\n    }\r\n\r\n    // Get user\r\n    getInvent(id): Promise<any> {\r\n      return this.dbInstance.executeSql(`SELECT * FROM ${this.db_inventaire} WHERE inventaire_id = ?`, [id])\r\n      .then((res) => { \r\n        return {\r\n          inventaire_id: res.rows.item(0).inventaire_id,\r\n          titre: res.rows.item(0).titre,  \r\n          date : res.rows.item(0).date,\r\n          type : res.rows.item(0).type,\r\n        }\r\n      });\r\n    }\r\n\r\n    // Update\r\n    updateInvent(id, titre, date , type) {\r\n      let data = [titre, date , type];\r\n      return this.dbInstance.executeSql(`UPDATE ${this.db_inventaire} SET titre = ?, date = ? , type = ? WHERE inventaire_id = ${id}`, data)\r\n    }  \r\n\r\n    // Delete\r\n    deleteInevent(invent) {\r\n      this.dbInstance.executeSql(`\r\n      DELETE FROM ${this.db_inventaire} WHERE inventaire_id = ${invent}`, [])\r\n        .then(() => {\r\n          alert(\"inventaire deleted!\");\r\n          this.getAllInvent();\r\n        })\r\n        .catch(e => {\r\n          alert(JSON.stringify(e))\r\n        });\r\n    }\r\n\r\n\r\n\r\n    public addUser(n, p ,u , e ,pa , te , r ) {\r\n      // validation\r\n     \r\n      this.dbInstance.executeSql(`\r\n      INSERT INTO ${this.db_users} (nom, prenom , username , email , password ,telephone , role ) VALUES ('${n}', '${p}' , '${u}' , '${e}' , '${pa}', '${te}' ,  '${r}')`, [])\r\n        .then(() => {\r\n          alert(\"Success\");\r\n          this.getAllUsers();\r\n        }, (e) => {\r\n          alert(JSON.stringify(e.err));\r\n        });\r\n    }\r\n\r\n    getAllUsers() {\r\n      return this.dbInstance.executeSql(`SELECT * FROM ${this.db_users}`, []).then((res) => {\r\n        this.Users = [];\r\n        if (res.rows.length > 0) {\r\n          for (var i = 0; i < res.rows.length; i++) {\r\n            this.Users.push(res.rows.item(i));\r\n          }\r\n          return this.Users;\r\n        }\r\n      },(e) => {\r\n        alert(JSON.stringify(e));\r\n      });\r\n    }\r\n\r\n    // Get user\r\n    getUser(id): Promise<any> {\r\n      return this.dbInstance.executeSql(`SELECT * FROM ${this.db_users} WHERE user_id = ?`, [id])\r\n      .then((res) => { \r\n        return {\r\n          user_id: res.rows.item(0).user_id,\r\n          nom: res.rows.item(0).nom,  \r\n          prenom : res.rows.item(0).prenom,\r\n          username : res.rows.item(0).username,\r\n          email : res.rows.item(0).email,\r\n          password : res.rows.item(0).password,\r\n          telephone : res.rows.item(0).telephone,\r\n          role : res.rows.item(0).role,\r\n          \r\n\r\n        }\r\n      });\r\n    }\r\n\r\n    // Update\r\n    updateUser(id, nom, prenom , username , email, password , tele , role) {\r\n      let data = [nom, prenom ,username, email, password, tele , role];\r\n      return this.dbInstance.executeSql(`UPDATE ${this.db_users} SET nom = ?, prenom= ? , username = ? , email =? , password =? , telephone =? ,role =? WHERE user_id = ${id}`, data)\r\n    }  \r\n\r\n    // Delete\r\n    deleteUser(user) {\r\n      this.dbInstance.executeSql(`\r\n      DELETE FROM ${this.db_users} WHERE product_id = ${user}`, [])\r\n        .then(() => {\r\n          alert(\"User deleted!\");\r\n          this.getAllUsers();\r\n        })\r\n        .catch(e => {\r\n          alert(JSON.stringify(e))\r\n        });\r\n    }\r\n\r\n\r\n\r\nasync login( username: string , password :string ){\r\n\r\n      return this.dbInstance.executeSql('SELECT * FROM users', []).then(data => {\r\n        \r\n   \r\n        if (data.rows.length > 0) {\r\n          for (var i = 0; i < data.rows.length; i++) {\r\n            \r\n            if (data.rows.item(i).username != '' && data.rows.item(i).username == username && data.rows.item(i).username == username && data.rows.item(i).password == password && data.rows.item(i).password != '' && data.rows.item(i).role == 0  ) {\r\n            \r\n                this.router.navigate(['/menu']);\r\n            }\r\n            else if(data.rows.item(i).username != '' && data.rows.item(i).username == username && data.rows.item(i).username == username && data.rows.item(i).password == password && data.rows.item(i).password != '' && data.rows.item(i).role == 1  ){\r\n              this.router.navigate(['/create']);\r\n  \r\n          }\r\n          else if(data.rows.item(i).username != '' && data.rows.item(i).username == username && data.rows.item(i).username == username && data.rows.item(i).password == password && data.rows.item(i).password != '' && data.rows.item(i).role == 2 ){\r\n            this.router.navigate(['/inventaire']);\r\n  \r\n          }\r\n        }\r\n      }\r\n    })\r\n  }\r\n}\r\n"]}